<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!-- 自动扫描该包，带有@controller注解的类是控制器 -->  
    <context:component-scan base-package="blog.xzbk.*" />
    <!-- 开启注解驱动，使用的spring是4.x版本。如果打上这个标签自动注入两个bean
     requesthandlermapping,requesthandleradapter这两个实例主要目的是将request请求交给对应的controller处理
      -->
    <mvc:annotation-driven/>
    <!-- 让对静态资源的请求能够绕过dispatcherServlet的拦截 -->
    <mvc:default-servlet-handler/>
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>
    
    <!-- 配置视图解析器，返回String类型的值自动添加前缀后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
      p:viewClass="org.springframework.web.servlet.view.JstlView"
    p:prefix="/" p:suffix=".jsp"/>
    
    <!-- 配置拦截器 -->
	<!-- <mvc:interceptors></mvc:interceptors> -->
</beans>